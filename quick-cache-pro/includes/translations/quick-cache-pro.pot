# Copyright (C) 2015 Quick Cache Pro
# This file is distributed under the same license as the Quick Cache Pro package.
msgid ""
msgstr ""
"Project-Id-Version: Quick Cache Pro 150129.3\n"
"Report-Msgid-Bugs-To: http://wordpress.org/tag/quick-cache-pro\n"
"POT-Creation-Date: 2015-03-14 23:02:00+00:00\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"PO-Revision-Date: 2015-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"

#: includes/actions.php:67
msgid "<p><strong>Wiped a total of <code>%1$s</code> cache files.</strong></p>"
msgstr ""

#: includes/actions.php:68
msgid "<p>Cache wiped for all sites; recreation will occur automatically over time.</p>"
msgstr ""

#: includes/actions.php:69
msgid "<p><strong>Also wiped <code>%1$s</code> s2Clean cache files.</strong></p>"
msgstr ""

#: includes/actions.php:120
msgid "<p><strong>Cleared a total of <code>%1$s</code> cache files.</strong></p>"
msgstr ""

#: includes/actions.php:121
msgid "<p>Cache cleared for this site; recreation will occur automatically over time.</p>"
msgstr ""

#: includes/actions.php:122
msgid "<p><strong>Also cleared <code>%1$s</code> s2Clean cache files.</strong></p>"
msgstr ""

#: includes/actions.php:284
msgid "Unknown error. Please wait 15 minutes and try again."
msgstr ""

#. translators: This string is actually NOT translatable because the `__()`
#. function is not available at this point in the processing.
#: includes/advanced-cache.tpl.php:1023
msgid "Quick Cache fully functional :-) Cache file served for (%1$s) in %2$s seconds, on: %3$s."
msgstr ""

#: includes/advanced-cache.tpl.php:1135
msgid "Quick Cache fully functional :-) Cache file served for (%1$s; user token: %2$s) in %3$s seconds, on: %4$s."
msgstr ""

#: includes/advanced-cache.tpl.php:1226
msgid "Unexpected OB phase: `%1$s`."
msgstr ""

#: includes/advanced-cache.tpl.php:1296
msgid "Cache directory not writable. Quick Cache needs this directory please: `%1$s`. Set permissions to `755` or higher; `777` might be needed in some cases."
msgstr ""

#: includes/advanced-cache.tpl.php:1303 includes/advanced-cache.tpl.php:1328
msgid "Unable to create symlink: `%1$s` Â» `%2$s`. Possible permissions issue (or race condition), please check your cache directory: `%3$s`."
msgstr ""

#: includes/advanced-cache.tpl.php:1316
msgid "Quick Cache file path: %1$s"
msgstr ""

#: includes/advanced-cache.tpl.php:1317
msgid "Quick Cache file built for (%1$s%2$s) in %3$s seconds, on: %4$s."
msgstr ""

#: includes/advanced-cache.tpl.php:1318
msgid "user token: %1$s"
msgstr ""

#: includes/advanced-cache.tpl.php:1319
msgid "This Quick Cache file will auto-expire (and be rebuilt) on: %1$s (based on your configured expiration time)."
msgstr ""

#: includes/advanced-cache.tpl.php:1343
msgid "Quick Cache: failed to write cache file for: `%1$s`; possible permissions issue (or race condition), please check your cache directory: `%2$s`."
msgstr ""

#: includes/advanced-cache.tpl.php:1377
msgid "Quick Cache HTML Compressor"
msgstr ""

#: includes/advanced-cache.tpl.php:1445
msgid "because `PHP_SAPI` reports that you are currently running from the command line."
msgstr ""

#: includes/advanced-cache.tpl.php:1449
msgid "because `$_GET['qcAC']` is set to a boolean-ish FALSE value."
msgstr ""

#: includes/advanced-cache.tpl.php:1453
msgid "because `$_SERVER['HTTP_HOST']` is missing from your server configuration."
msgstr ""

#: includes/advanced-cache.tpl.php:1457
msgid "because `$_SERVER['REQUEST_URI']` is missing from your server configuration."
msgstr ""

#: includes/advanced-cache.tpl.php:1461
msgid "because the PHP constant `QUICK_CACHE_ALLOWED` has been set to a boolean-ish `FALSE` value at runtime. Perhaps by WordPress itself, or by one of your themes/plugins. This usually means that you have a theme/plugin intentionally disabling the cache on this page; and it's usually for a very good reason."
msgstr ""

#: includes/advanced-cache.tpl.php:1465
msgid "because the environment variable `$_SERVER['QUICK_CACHE_ALLOWED']` has been set to a boolean-ish `FALSE` value at runtime. Perhaps by WordPress itself, or by one of your themes/plugins. This usually means that you have a theme/plugin intentionally disabling the cache on this page; and it's usually for a very good reason."
msgstr ""

#: includes/advanced-cache.tpl.php:1469
msgid "because the PHP constant `DONOTCACHEPAGE` has been set at runtime. Perhaps by WordPress itself, or by one of your themes/plugins. This usually means that you have a theme/plugin intentionally disabling the cache on this page; and it's usually for a very good reason."
msgstr ""

#: includes/advanced-cache.tpl.php:1473
msgid "because the environment variable `$_SERVER['DONOTCACHEPAGE']` has been set at runtime. Perhaps by WordPress itself, or by one of your themes/plugins. This usually means that you have a theme/plugin intentionally disabling the cache on this page; and it's usually for a very good reason."
msgstr ""

#: includes/advanced-cache.tpl.php:1477
msgid "because `$_SERVER['REQUEST_METHOD']` is `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `TRACE` or `CONNECT`. These request methods should never (ever) be cached in any way."
msgstr ""

#: includes/advanced-cache.tpl.php:1481
msgid "because `$_SERVER['REMOTE_ADDR']` === `$_SERVER['SERVER_ADDR']`; i.e. a self-serve request. DEVELOPER TIP: if you are testing on a localhost installation, please add `define('LOCALHOST', TRUE);` to your `/wp-config.php` file while you run tests :-) Remove it (or set it to a `FALSE` value) once you go live on the web."
msgstr ""

#: includes/advanced-cache.tpl.php:1485
msgid "because `$_SERVER['REQUEST_URI']` indicates this is a `/feed`; and the configuration of this site says not to cache XML-based feeds."
msgstr ""

#: includes/advanced-cache.tpl.php:1489
msgid "because `$_SERVER['REQUEST_URI']` indicates this is a `wp-` or `xmlrpc` file; i.e. a WordPress systematic file. WordPress systematics are never (ever) cached in any way."
msgstr ""

#: includes/advanced-cache.tpl.php:1493
msgid "because `$_SERVER['REQUEST_URI']` or the `is_admin()` function indicates this is an administrative area of the site."
msgstr ""

#: includes/advanced-cache.tpl.php:1497
msgid "because `$_SERVER['REQUEST_URI']` indicates this is a Multisite Network; and this was a request for `/files/*`, not a page."
msgstr ""

#: includes/advanced-cache.tpl.php:1502
msgid "because the current user visiting this page (usually YOU), appears to be logged-in. The current configuration says NOT to cache pages for logged-in visitors. This message may also appear if you have an active PHP session on this site, or if you've left (or replied to) a comment recently. If this message continues, please clear your cookies and try again."
msgstr ""

#: includes/advanced-cache.tpl.php:1506
msgid "because the current user appeared to be logged into the site (in one way or another); but Quick Cache was unable to formulate a User Token for them. Please report this as a possible bug."
msgstr ""

#: includes/advanced-cache.tpl.php:1510
msgid "because `$_GET` contains query string data. The current configuration says NOT to cache GET requests with a query string."
msgstr ""

#: includes/advanced-cache.tpl.php:1514
msgid "because `$_SERVER['REQUEST_URI']` matches a configured URI Exclusion Pattern on this installation."
msgstr ""

#: includes/advanced-cache.tpl.php:1518
msgid "because `$_SERVER['HTTP_USER_AGENT']` matches a configured User-Agent Exclusion Pattern on this installation."
msgstr ""

#: includes/advanced-cache.tpl.php:1522
msgid "because `$_SERVER['HTTP_REFERER']` and/or `$_GET['_wp_http_referer']` matches a configured HTTP Referrer Exclusion Pattern on this installation."
msgstr ""

#: includes/advanced-cache.tpl.php:1526
msgid "because the WordPress `is_404()` Conditional Tag says the current page is a 404 error. The current configuration says NOT to cache 404 errors."
msgstr ""

#: includes/advanced-cache.tpl.php:1530
msgid "because a plugin running on this installation says this page is in Maintenance Mode; i.e. is not available publicly at this time."
msgstr ""

#: includes/advanced-cache.tpl.php:1534
msgid "because Quick Cache is unable to cache already-compressed output. Please use `mod_deflate` w/ Apache; or use `zlib.output_compression` in your `php.ini` file. Quick Cache is NOT compatible with `ob_gzhandler()` and others like this."
msgstr ""

#: includes/advanced-cache.tpl.php:1538
msgid "because the contents of this document contain `<body id=\"error-page\">`, which indicates this is an auto-generated WordPress error message."
msgstr ""

#: includes/advanced-cache.tpl.php:1542
msgid "because a `Content-Type:` header was set via PHP at runtime. The header contains a MIME type which is NOT a variation of HTML or XML. This header might have been set by your hosting company, by WordPress itself; or by one of your themes/plugins."
msgstr ""

#: includes/advanced-cache.tpl.php:1546
msgid "because a `Status:` header (or an `HTTP/` header) was set via PHP at runtime. The header contains a non-`2xx` status code. This indicates the current page was not loaded successfully. This header might have been set by your hosting company, by WordPress itself; or by one of your themes/plugins."
msgstr ""

#: includes/advanced-cache.tpl.php:1550
msgid "because the WordPress `is_404()` Conditional Tag says the current page is a 404 error; and this is the first time it's happened on this page. Your current configuration says that 404 errors SHOULD be cached, so Quick Cache built a cached symlink which points future requests for this location to your already-cached 404 error document. If you reload this page (assuming you don't clear the cache before you do so); you should get a cached version of your 404 error document. This message occurs ONCE for each new/unique 404 error request."
msgstr ""

#: includes/advanced-cache.tpl.php:1554
msgid "because Quick Cache detected an early output buffer termination. This may happen when a theme/plugin ends, cleans, or flushes all output buffers before reaching the PHP shutdown phase. It's not always a bad thing. Sometimes it is necessary for a theme/plugin to do this. However, in this scenario it is NOT possible to cache the output; since Quick Cache is effectively disabled at runtime when this occurs."
msgstr ""

#: includes/advanced-cache.tpl.php:1558
msgid "due to an unexpected behavior in the application. Please report this as a bug!"
msgstr ""

#: includes/advanced-cache.tpl.php:1561
msgid "Quick Cache is NOT caching this page, %1$s"
msgstr ""

#: includes/auto-cache.php:155 includes/auto-cache.php:183
msgid "Auto-cache log file is NOT writable: `%1$s`. Please set permissions to `644` (or higher). `666` might be needed in some cases."
msgstr ""

#: includes/auto-cache.php:218
msgid "Invalid XML sitemap. Unreachable URL: `%1$s`. %2$s"
msgstr ""

#: includes/auto-cache.php:224
msgid "Invalid XML sitemap status code at: `%1$s`. Expecting a `200` status. Instead got: `%2$s`."
msgstr ""

#: includes/auto-cache.php:230
msgid "Invalid XML sitemap content type at: `%1$s`. Expecting XML. Instead got: `%2$s`."
msgstr ""

#: includes/menu-pages.php:24 quick-cache-pro.inc.php:648
msgid "Wipe Cache (Start Fresh); clears the cache for all sites in this network at once!"
msgstr ""

#: includes/menu-pages.php:26 quick-cache-pro.inc.php:647
msgid "Wipe"
msgstr ""

#: includes/menu-pages.php:28 quick-cache-pro.inc.php:654
msgid "Clear Cache (Start Fresh)"
msgstr ""

#: includes/menu-pages.php:28
msgid "; affects the current site only."
msgstr ""

#: includes/menu-pages.php:30
msgid "Clear"
msgstr ""

#: includes/menu-pages.php:33
msgid "Restore default plugin options? You will lose all of your current settings! Are you absolutely sure about this?"
msgstr ""

#: includes/menu-pages.php:35
msgid "Restore"
msgstr ""

#: includes/menu-pages.php:37 includes/menu-pages.php:648
msgid "All Panels"
msgstr ""

#: includes/menu-pages.php:43
msgid "Pro Updater"
msgstr ""

#: includes/menu-pages.php:44 includes/menu-pages.php:655
msgid "Newsletter (Subscribe)"
msgstr ""

#: includes/menu-pages.php:45 includes/menu-pages.php:656
msgid "Beta Testers (Signup)"
msgstr ""

#: includes/menu-pages.php:48 quick-cache-pro.inc.php:798
#: quick-cache-pro.inc.php:821
msgid "Plugin Options"
msgstr ""

#: includes/menu-pages.php:55
msgid "<strong>NOTICE:</strong> This plugin is no longer maintained. <a href=\"http://zencache.com/r/announcing-zencache-formerly-quick-cache/\" target=\"_blank\">Quick Cache Pro is now ZenCache Pro</a> (a free upgrade). For further details, see the <a href=\"http://zencache.com/r/quick-cache-pro-migration-faq/\" target=\"_blank\">migration FAQ</a>."
msgstr ""

#: includes/menu-pages.php:62
msgid "Options updated successfully."
msgstr ""

#: includes/menu-pages.php:68
msgid "Default options successfully restored."
msgstr ""

#: includes/menu-pages.php:74
msgid "Cache wiped across all sites; recreation will occur automatically over time."
msgstr ""

#: includes/menu-pages.php:80
msgid "Cache cleared for this site; recreation will occur automatically over time."
msgstr ""

#: includes/menu-pages.php:86
msgid "Failed to update your <code>/wp-config.php</code> file automatically. Please add the following line to your <code>/wp-config.php</code> file (right after the opening <code>&lt;?php</code> tag; on it's own line). <pre class=\"code\"><code>&lt;?php<br />define('WP_CACHE', TRUE);</code></pre>"
msgstr ""

#: includes/menu-pages.php:92
msgid "Failed to update your <code>/wp-config.php</code> file automatically. Please remove the following line from your <code>/wp-config.php</code> file, or set <code>WP_CACHE</code> to a <code>FALSE</code> value. <pre class=\"code\"><code>define('WP_CACHE', TRUE);</code></pre>"
msgstr ""

#: includes/menu-pages.php:99
msgid "Failed to update your <code>/wp-content/advanced-cache.php</code> file. Cannot write stat file: <code>%1$s/qc-advanced-cache</code>. Please be sure this directory exists (and that it's writable): <code>%1$s</code>. Please use directory permissions <code>755</code> or higher (perhaps <code>777</code>). Once you've done this, please try again."
msgstr ""

#: includes/menu-pages.php:100
msgid "Failed to update your <code>/wp-content/advanced-cache.php</code> file. Most likely a permissions error. Please create an empty file here: <code>/wp-content/advanced-cache.php</code> (just an empty PHP file, with nothing in it); give it permissions <code>644</code> or higher (perhaps <code>666</code>). Once you've done this, please try again."
msgstr ""

#: includes/menu-pages.php:106
msgid "Failed to remove your <code>/wp-content/advanced-cache.php</code> file. Most likely a permissions error. Please delete (or empty the contents of) this file: <code>/wp-content/advanced-cache.php</code>."
msgstr ""

#: includes/menu-pages.php:112
msgid "Quick Cache is currently disabled; please review options below."
msgstr ""

#: includes/menu-pages.php:120
msgid "Enable/Disable"
msgstr ""

#: includes/menu-pages.php:125
msgid "Yes, enable Quick Cache!"
msgstr ""

#: includes/menu-pages.php:125
msgid "No, disable."
msgstr ""

#: includes/menu-pages.php:127
msgid "<strong>HUGE Time-Saver:</strong> Approx. 95% of all WordPress sites running Quick Cache, simply enable it here; and that's it :-) <strong>No further configuration is necessary (really).</strong> All of the other options (down below) are already tuned for the BEST performance on a typical WordPress installation. Simply enable Quick Cache here and click \"Save All Changes\". If you get any warnings please follow the instructions given. Otherwise, you're good <i class=\"fa fa-smile-o\"></i>. This plugin is designed to run just fine like it is. Take it for a spin right away; you can always fine-tune things later if you deem necessary."
msgstr ""

#: includes/menu-pages.php:130
msgid "How Can I Tell Quick Cache is Working?"
msgstr ""

#: includes/menu-pages.php:131
msgid "First of all, please make sure that you've enabled Quick Cache here; then scroll down to the bottom of this page and click \"Save All Changes\". All of the other options (below) are already pre-configured for typical usage. Feel free to skip them all for now. You can go back through all of these later and fine-tune things the way you like them."
msgstr ""

#: includes/menu-pages.php:132
msgid "Once Quick Cache has been enabled, <strong>you'll need to log out (and/or clear browser cookies)</strong>. By default, cache files are NOT served to visitors who are logged-in, and that includes you too ;-) Cache files are NOT served to recent comment authors either. If you've commented (or replied to a comment lately); please clear your browser cookies before testing."
msgstr ""

#: includes/menu-pages.php:133
msgid "<strong>To verify that Quick Cache is working</strong>, navigate your site like a normal visitor would. Right-click on any page (choose View Source), then scroll to the very bottom of the document. At the bottom, you'll find comments that show Quick Cache stats and information. You should also notice that page-to-page navigation is <i class=\"fa fa-flash\"></i> <strong>lightning fast</strong> now that Quick Cache is running; and it gets faster over time!"
msgstr ""

#: includes/menu-pages.php:135
msgid "Yes, enable notes in the source code so I can see it's working (recommended)."
msgstr ""

#: includes/menu-pages.php:136
msgid "Yes, enable notes in the source code AND show debugging details (not recommended for production)."
msgstr ""

#: includes/menu-pages.php:137
msgid "No, I don't want my source code to contain any of these notes."
msgstr ""

#: includes/menu-pages.php:146
msgid "Plugin Deletion Safeguards"
msgstr ""

#: includes/menu-pages.php:151
msgid "Uninstall on Plugin Deletion; or Safeguard Options?"
msgstr ""

#: includes/menu-pages.php:152
msgid "<strong>Tip:</strong> By default, if you delete Quick Cache using the plugins menu in WordPress, nothing is lost. However, if you want to completely uninstall Quick Cache you should set this to <code>Yes</code> and <strong>THEN</strong> deactivate &amp; delete Quick Cache from the plugins menu in WordPress. This way Quick Cache will erase your options for the plugin, erase directories/files created by the plugin, remove the <code>advanced-cache.php</code> file, terminate CRON jobs, etc. It erases itself from existence completely."
msgstr ""

#: includes/menu-pages.php:154
msgid "Safeguard my options and the cache (recommended)."
msgstr ""

#: includes/menu-pages.php:155
msgid "Yes, uninstall (completely erase) Quick Cache on plugin deletion."
msgstr ""

#: includes/menu-pages.php:164
msgid "Clearing the Cache"
msgstr ""

#: includes/menu-pages.php:168
msgid "Clearing the Cache Manually"
msgstr ""

#: includes/menu-pages.php:170
msgid "Once Quick Cache is enabled, you will find this new option in your WordPress Admin Bar (see screenshot on right). Clicking this button will clear the cache and you can start fresh at anytime (e.g. you can do this manually; and as often as you wish)."
msgstr ""

#: includes/menu-pages.php:171
msgid "Depending on the structure of your site, there could be many reasons to clear the cache. However, the most common reasons are related to Post/Page edits or deletions, Category/Tag edits or deletions, and Theme changes. Quick Cache handles most scenarios all by itself. However, many site owners like to clear the cache manually; for a variety of reasons (just to force a refresh)."
msgstr ""

#: includes/menu-pages.php:173
msgid "Yes, enable the &quot;Clear Cache&quot; button in the WordPress admin bar."
msgstr ""

#: includes/menu-pages.php:174
msgid "No, I don't intend to clear the cache manually; exclude from admin bar."
msgstr ""

#: includes/menu-pages.php:177
msgid "Running the <a href=\"http://www.websharks-inc.com/product/s2clean/\" target=\"_blank\">s2Clean Theme</a> by WebSharks?"
msgstr ""

#: includes/menu-pages.php:178
msgid "If s2Clean is installed, Quick Cache can be configured to clear the Markdown cache too (if you've enabled Markdown processing with s2Clean). The s2Clean Markdown cache is only cleared when you manually clear the cache (with Quick Cache); and only if you enable this option here. Note: s2Clean's Markdown cache is extremely dynamic. Just like the rest of your site, s2Clean caches do NOT need to be cleared away at all, as this happens automatically when your content changes. However, some developers find this feature useful while developing their site; just to force a refresh."
msgstr ""

#: includes/menu-pages.php:180
msgid "Yes, if the s2Clean theme is installed; also clear s2Clean-related caches."
msgstr ""

#: includes/menu-pages.php:181
msgid "No, I don't use s2Clean; or, I don't want s2Clean-related caches cleared."
msgstr ""

#: includes/menu-pages.php:183
msgid "Process Other Custom PHP Code?"
msgstr ""

#: includes/menu-pages.php:184
msgid "If you have other custom routines you'd like to process when the cache is cleared manually, please type your custom PHP code here. The PHP code that you provide is only evaluated when you manually clear the cache (with Quick Cache); and only if the field below contains PHP code. Note: if your PHP code outputs a message (e.g. if you have <code>echo '&lt;p&gt;My message&lt;/p&gt;';</code>); your message will be displayed along with any other notes from Quick Cache itself. This could be useful to developers that need to clear server caches too (such as <a href=\"http://www.php.net/manual/en/function.apc-clear-cache.php\" target=\"_blank\">APC</a> or <a href=\"http://www.php.net/manual/en/memcache.flush.php\" target=\"_blank\">memcache</a>)."
msgstr ""

#: includes/menu-pages.php:186
msgid "<strong>Example:</strong> <code>&lt;?php apc_clear_cache(); echo '&lt;p&gt;Also cleared APC cache.&lt;/p&gt;'; ?&gt;</code>"
msgstr ""

#: includes/menu-pages.php:188
msgid "Clearing the Cache Automatically"
msgstr ""

#: includes/menu-pages.php:190
msgid "This is built into the Quick Cache plugin; e.g. this functionality is \"always on\". If you edit a Post/Page (or delete one), Quick Cache will automatically clear the cache file(s) associated with that content. This way a new updated version of the cache will be created automatically the next time this content is accessed. Simple updates like this occur each time you make changes in the Dashboard, and Quick Cache will notify you of these as they occur. Quick Cache monitors changes to Posts (of any kind, including Pages), Categories, Tags, Links, Themes (even Users); and more. Notifications in the Dashboard regarding these detections can be enabled/disabled below."
msgstr ""

#: includes/menu-pages.php:192
msgid "Yes, enable Quick Cache notifications in the Dashboard when changes are detected &amp; one or more cache files are cleared automatically."
msgstr ""

#: includes/menu-pages.php:193
msgid "No, I don't want to know (don't really care) what Quick Cache is doing behind-the-scene."
msgstr ""

#: includes/menu-pages.php:196
msgid "Auto-Clear Designated \"Home Page\" Too?"
msgstr ""

#: includes/menu-pages.php:197
msgid "On many sites, the Home Page (aka: the Front Page) offers an archive view of all Posts (or even Pages). Therefore, if a single Post/Page is changed in some way; and Quick Cache clears/resets the cache for a single Post/Page, would you like Quick Cache to also clear any existing cache files for the \"Home Page\"?"
msgstr ""

#: includes/menu-pages.php:199
msgid "Yes, if any single Post/Page is cleared/reset; also clear the \"Home Page\"."
msgstr ""

#: includes/menu-pages.php:200
msgid "No, my Home Page does not provide a list of Posts/Pages; e.g. this is not necessary."
msgstr ""

#: includes/menu-pages.php:202
msgid "Auto-Clear Designated \"Posts Page\" Too?"
msgstr ""

#: includes/menu-pages.php:203
msgid "On many sites, the Posts Page (aka: the Blog Page) offers an archive view of all Posts (or even Pages). Therefore, if a single Post/Page is changed in some way; and Quick Cache clears/resets the cache for a single Post/Page, would you like Quick Cache to also clear any existing cache files for the \"Posts Page\"?"
msgstr ""

#: includes/menu-pages.php:205
msgid "Yes, if any single Post/Page is cleared/reset; also clear the \"Posts Page\"."
msgstr ""

#: includes/menu-pages.php:206
msgid "No, I don't use a separate Posts Page; e.g. my Home Page IS my Posts Page."
msgstr ""

#: includes/menu-pages.php:209
msgid "Auto-Clear \"Author Page\" Too?"
msgstr ""

#: includes/menu-pages.php:210
msgid "On many sites, each author has a related \"Author Page\" that offers an archive view of all posts associated with that author. Therefore, if a single Post/Page is changed in some way; and Quick Cache clears/resets the cache for a single Post/Page, would you like Quick Cache to also clear any existing cache files for the related \"Author Page\"?"
msgstr ""

#: includes/menu-pages.php:212
msgid "Yes, if any single Post/Page is cleared/reset; also clear the \"Author Page\"."
msgstr ""

#: includes/menu-pages.php:213
msgid "No, my site doesn't use multiple authors and/or I don't have any \"Author Page\" archive views."
msgstr ""

#: includes/menu-pages.php:215
msgid "Auto-Clear \"Category Archives\" Too?"
msgstr ""

#: includes/menu-pages.php:216
msgid "On many sites, each post is associated with at least one Category. Each category then has an archive view that contains all the posts within that category. Therefore, if a single Post/Page is changed in some way; and Quick Cache clears/resets the cache for a single Post/Page, would you like Quick Cache to also clear any existing cache files for the associated Category archive views?"
msgstr ""

#: includes/menu-pages.php:218
msgid "Yes, if any single Post/Page is cleared/reset; also clear the associated Category archive views."
msgstr ""

#: includes/menu-pages.php:219
msgid "No, my site doesn't use Categories and/or I don't have any Category archive views."
msgstr ""

#: includes/menu-pages.php:221
msgid "Auto-Clear \"Tag Archives\" Too?"
msgstr ""

#: includes/menu-pages.php:222
msgid "On many sites, each post may be associated with at least one Tag. Each tag then has an archive view that contains all the posts assigned that tag. Therefore, if a single Post/Page is changed in some way; and Quick Cache clears/resets the cache for a single Post/Page, would you like Quick Cache to also clear any existing cache files for the associated Tag archive views?"
msgstr ""

#: includes/menu-pages.php:224
msgid "Yes, if any single Post/Page is cleared/reset; also clear the associated Tag archive views."
msgstr ""

#: includes/menu-pages.php:225
msgid "No, my site doesn't use Tags and/or I don't have any Tag archive views."
msgstr ""

#: includes/menu-pages.php:227
msgid "Auto-Clear \"Custom Term Archives\" Too?"
msgstr ""

#: includes/menu-pages.php:228
msgid "Most sites do not use any custom Terms so it should be safe to leave this disabled. However, if your site uses custom Terms and they have their own Term archive views, you may want to clear those when the associated post is cleared. Therefore, if a single Post/Page is changed in some way; and Quick Cache clears/resets the cache for a single Post/Page, would you like Quick Cache to also clear any existing cache files for the associated Tag archive views?"
msgstr ""

#: includes/menu-pages.php:230
msgid "Yes, if any single Post/Page is cleared/reset; also clear any associated custom Term archive views."
msgstr ""

#: includes/menu-pages.php:231
msgid "No, my site doesn't use any custom Terms and/or I don't have any custom Term archive views."
msgstr ""

#: includes/menu-pages.php:233
msgid "Auto-Clear \"Custom Post Type Archives\" Too?"
msgstr ""

#: includes/menu-pages.php:234
msgid "Most sites do not use any Custom Post Types so it should be safe to disable this option. However, if your site uses Custom Post Types and they have their own Custom Post Type archive views, you may want to clear those when any associated post is cleared. Therefore, if a single Post with a Custom Post Type is changed in some way; and Quick Cache clears/resets the cache for that post, would you like Quick Cache to also clear any existing cache files for the associated Custom Post Type archive views?"
msgstr ""

#: includes/menu-pages.php:236
msgid "Yes, if any single Post with a Custom Post Type is cleared/reset; also clear any associated Custom Post Type archive views."
msgstr ""

#: includes/menu-pages.php:237
msgid "No, my site doesn't use any Custom Post Types and/or I don't have any Custom Post Type archive views."
msgstr ""

#: includes/menu-pages.php:240
msgid "Auto-Clear \"RSS/RDF/ATOM Feeds\" Too?"
msgstr ""

#: includes/menu-pages.php:241
msgid "If you enable Feed Caching (below), this can be quite handy. If enabled, when you update a Post/Page, approve a Comment, or make other changes where Quick Cache can detect that certain types of Feeds should be cleared to keep your site up-to-date, then Quick Cache will do this for you automatically. For instance, the blog's master feed, the blog's master comments feed, feeds associated with comments on a Post/Page, term-related feeds (including mixed term-related feeds), author-related feeds, etc. Under various circumstances (i.e. as you work in the Dashboard) these can be cleared automatically to keep your site up-to-date."
msgstr ""

#: includes/menu-pages.php:243
msgid "Yes, automatically clear RSS/RDF/ATOM Feeds from the cache when certain changes occur."
msgstr ""

#: includes/menu-pages.php:244
msgid "No, I don't have Feed Caching enabled, or I prefer not to automatically clear Feeds."
msgstr ""

#: includes/menu-pages.php:247
msgid "Auto-Clear \"XML Sitemaps\" Too?"
msgstr ""

#: includes/menu-pages.php:248
msgid "If you're generating XML Sitemaps with a plugin like <a href=\"http://wordpress.org/plugins/google-sitemap-generator/\" target=\"_blank\">Google XML Sitemaps</a>, you can tell Quick Cache to automatically clear the cache of any XML Sitemaps whenever it clears a Post/Page. Note; this does NOT clear the XML Sitemap itself of course, only the cache. The point being, to clear the cache and allow changes to a Post/Page to be reflected by a fresh copy of your XML Sitemap; sooner rather than later."
msgstr ""

#: includes/menu-pages.php:250
msgid "Yes, if any single Post/Page is cleared/reset; also clear the cache for any XML Sitemaps."
msgstr ""

#: includes/menu-pages.php:251
msgid "No, my site doesn't use any XML Sitemaps and/or I prefer NOT to clear the cache for XML Sitemaps."
msgstr ""

#: includes/menu-pages.php:253
msgid "<strong style=\"font-size:110%;\">XML Sitemap Patterns...</strong> A default value of <code>/sitemap*.xml</code> covers all XML Sitemaps for most installations. However, you may customize this further if you deem necessary. One pattern per line please. A wildcard <code>*</code> matches zero or more characters. Searches are performed against the <a href=\"https://gist.github.com/jaswsinc/338b6eb03a36c048c26f\" target=\"_blank\">REQUEST_URI</a>; e.g. a request for <code>/sitemap.xml</code> and/or <code>/sitemap-xyz.xml</code> are both matched by the pattern: <code>/sitemap*.xml</code>. If your XML Sitemap was located inside a sub-directory; e.g. <code>/my/sitemaps/xyz.xml</code>; you might add the following pattern on a new line: <code>/my/sitemaps/*.xml</code>"
msgstr ""

#: includes/menu-pages.php:255
msgid "In a Multisite Network, each child blog (whether it be a sub-domain, a sub-directory, or a mapped domain); will automatically change the leading <code>http://[sub.]domain/[sub-directory]</code> used in pattern matching. In short, there is no need to add sub-domains or sub-directories for each child blog in these patterns. Please include only the <a href=\"https://gist.github.com/jaswsinc/338b6eb03a36c048c26f\" target=\"_blank\">REQUEST_URI</a> (i.e. the path) which leads to the XML Sitemap on all child blogs in the network."
msgstr ""

#: includes/menu-pages.php:263
msgid "Directory / Expiration Time"
msgstr ""

#: includes/menu-pages.php:267
msgid "Base Cache Directory (Must be Writable; e.g. <a href=\"http://codex.wordpress.org/Changing_File_Permissions\" target=\"_blank\">Permissions</a> <code>755</code> or Higher)"
msgstr ""

#: includes/menu-pages.php:268
msgid "This is where Quick Cache will store the cached version of your site. If you're not sure how to deal with directory permissions, don't worry too much about this. If there is a problem, Quick Cache will let you know about it. By default, this directory is created by Quick Cache and the permissions are setup automatically. In most cases there is nothing more you need to do."
msgstr ""

#: includes/menu-pages.php:272
msgid "Automatic Expiration Time (Max Age)"
msgstr ""

#: includes/menu-pages.php:273
msgid "If you don't update your site much, you could set this to <code>6 months</code> and optimize everything even further. The longer the Cache Expiration Time is, the greater your performance gain. Alternatively, the shorter the Expiration Time, the fresher everything will remain on your site. A default value of <code>7 days</code> (recommended); is a good conservative middle-ground."
msgstr ""

#: includes/menu-pages.php:274
msgid "Keep in mind that your Expiration Time is only one part of the big picture. Quick Cache will also clear the cache automatically as changes are made to the site (i.e. you edit a post, someone comments on a post, you change your theme, you add a new navigation menu item, etc., etc.). Thus, your Expiration Time is really just a fallback; e.g. the maximum amount of time that a cache file could ever possibly live."
msgstr ""

#: includes/menu-pages.php:275
msgid "All of that being said, you could set this to just <code>60 seconds</code> and you would still see huge differences in speed and performance. If you're just starting out with Quick Cache (perhaps a bit nervous about old cache files being served to your visitors); you could set this to something like <code>30 minutes</code>, and experiment with it while you build confidence in Quick Cache. It's not necessary to do so, but many site owners have reported this makes them feel like they're more-in-control when the cache has a short expiration time. All-in-all, it's a matter of preference <i class=\"fa fa-smile-o\"></i>."
msgstr ""

#: includes/menu-pages.php:277
msgid "<strong>Tip:</strong> the value that you specify here MUST be compatible with PHP's <a href=\"http://php.net/manual/en/function.strtotime.php\" target=\"_blank\" style=\"text-decoration:none;\"><code>strtotime()</code></a> function. Examples: <code>30 seconds</code>, <code>2 hours</code>, <code>7 days</code>, <code>6 months</code>, <code>1 year</code>."
msgstr ""

#: includes/menu-pages.php:278
msgid "<strong>Note:</strong> Quick Cache will never serve a cache file that is older than what you specify here (even if one exists in your cache directory; stale cache files are never used). In addition, a WP Cron job will automatically cleanup your cache directory (once daily); purging expired cache files periodically. This prevents a HUGE cache from building up over time, creating a potential storage issue."
msgstr ""

#: includes/menu-pages.php:286
msgid "Client-Side Cache"
msgstr ""

#: includes/menu-pages.php:291
msgid "Allow Double-Caching In The Client-Side Browser?"
msgstr ""

#: includes/menu-pages.php:292
msgid "Recommended setting: <code>No</code> (for membership sites, very important). Otherwise, <code>Yes</code> would be better (if users do NOT log in/out of your site)."
msgstr ""

#: includes/menu-pages.php:293
msgid "Quick Cache handles content delivery through its ability to communicate with a browser using PHP. If you allow a browser to (cache) the caching system itself, you are momentarily losing some control; and this can have a negative impact on users that see more than one version of your site; e.g. one version while logged-in, and another while NOT logged-in. For instance, a user may log out of your site, but upon logging out they report seeing pages on the site which indicate they are STILL logged in (even though they're not â that's bad). This can happen if you allow a client-side cache, because their browser may cache web pages they visited while logged into your site which persist even after logging out. Sending no-cache headers will work to prevent this issue."
msgstr ""

#: includes/menu-pages.php:294
msgid "All of that being said, if all you care about is blazing fast speed and users don't log in/out of your site (only you do); you can safely set this to <code>Yes</code> (recommended in this case). Allowing a client-side browser cache will improve speed and reduce outgoing bandwidth when this option is feasible."
msgstr ""

#: includes/menu-pages.php:296
msgid "No, prevent a client-side browser cache (safest option)."
msgstr ""

#: includes/menu-pages.php:297
msgid "Yes, I will allow a client-side browser cache of pages on the site."
msgstr ""

#: includes/menu-pages.php:299
msgid "<strong>Tip:</strong> Setting this to <code>No</code> is highly recommended when running a membership plugin like <a href=\"http://wordpress.org/plugins/s2member/\" target=\"_blank\">s2Member</a> (as one example). In fact, many plugins like s2Member will send <a href=\"http://codex.wordpress.org/Function_Reference/nocache_headers\" target=\"_blank\">nocache_headers()</a> on their own, so your configuration here will likely be overwritten when you run such plugins (which is better anyway). In short, if you run a membership plugin, you should NOT allow a client-side browser cache."
msgstr ""

#: includes/menu-pages.php:300
msgid "<strong>Tip:</strong> Setting this to <code>No</code> will NOT impact static content; e.g. CSS, JS, images, or other media. This setting pertains only to dynamic PHP scripts which produce content generated by WordPress."
msgstr ""

#: includes/menu-pages.php:301
msgid "<strong>Advanced Tip:</strong> if you have this set to <code>No</code>, but you DO want to allow a few special URLs to be cached by the browser; you can add this parameter to your URL <code>?qcABC=1</code>. This tells Quick Cache that it's OK for the browser to cache that particular URL. In other words, the <code>qcABC=1</code> parameter tells Quick Cache NOT to send no-cache headers to the browser."
msgstr ""

#: includes/menu-pages.php:309
msgid "Logged-In Users"
msgstr ""

#: includes/menu-pages.php:314
msgid "Caching Enabled for Logged-In Users &amp; Comment Authors?"
msgstr ""

#: includes/menu-pages.php:315
msgid "This should almost ALWAYS be set to <code>No</code>. Most sites will NOT want to cache content generated while a user is logged-in. Doing so could result in a cache of dynamic content generated specifically for a particular user, where the content being cached may contain details that pertain only to the user that was logged-in when the cache was generated. Imagine visiting a website that says you're logged-in as Billy Bob (but you're not Billy Bob; NOT good). In short, do NOT turn this on unless you know what you're doing."
msgstr ""

#: includes/menu-pages.php:317
msgid "<strong>Exception (Membership Sites):</strong> If you run a site with many users and the majority of your traffic comes from users who ARE logged-in, please choose: <code>Yes (maintain separate cache)</code>. Quick Cache will operate normally; but when a user is logged-in, the cache is user-specific. Quick Cache will intelligently refresh the cache when/if a user submits a form on your site with the GET or POST method. Or, if you make changes to their account (or another plugin makes changes to their account); including user <a href=\"http://codex.wordpress.org/Function_Reference/update_user_option\" target=\"_blank\">option</a>|<a href=\"http://codex.wordpress.org/Function_Reference/update_user_meta\" target=\"_blank\">meta</a> additions, updates &amp; deletions too. However, please note that enabling this feature (e.g. user-specific cache entries); will eat up MUCH more disk space. That being said, the benefits of this feature for most sites will outweigh the disk overhead (e.g. it's NOT an issue in most cases). Unless you are short on disk space (or you have MANY thousands of users), the disk overhead is neglible."
msgstr ""

#: includes/menu-pages.php:319
msgid "No, do NOT cache; or serve a cache file when a user is logged-in (safest option)."
msgstr ""

#: includes/menu-pages.php:320
msgid "Yes, and maintain a separate cache for each user (recommended for membership sites)."
msgstr ""

#: includes/menu-pages.php:321
msgid "Yes, but DON'T maintain a separate cache for each user (I know what I'm doing)."
msgstr ""

#: includes/menu-pages.php:323
msgid "<strong>Note:</strong> For most sites, the majority of their traffic (if not all of their traffic) comes from visitors who are not logged in, so disabling the cache for logged-in users is NOT ordinarily a performance issue. When a user IS logged-in, disabling the cache is considered ideal, because a logged-in user has a session open with your site; and the content they view should remain very dynamic in this scenario."
msgstr ""

#: includes/menu-pages.php:324
msgid "<strong>Note:</strong> This setting includes some users who AREN'T actually logged into the system, but who HAVE authored comments recently. Quick Cache includes comment authors as part of it's logged-in user check. This way comment authors will be able to see updates to the comment thread immediately; and, so that any dynamically-generated messages displayed by your theme will work as intended. In short, Quick Cache thinks of a comment author as a logged-in user, even though technically they are not. ~ Users who gain access to password-protected Posts/Pages are also included."
msgstr ""

#: includes/menu-pages.php:332
msgid "GET Requests"
msgstr ""

#: includes/menu-pages.php:337
msgid "Caching Enabled for GET (Query String) Requests?"
msgstr ""

#: includes/menu-pages.php:338
msgid "This should almost ALWAYS be set to <code>No</code>. UNLESS, you're using unfriendly Permalinks. In other words, if all of your URLs contain a query string (e.g. <code>/?key=value</code>); you're using unfriendly Permalinks. Ideally, you would refrain from doing this; and instead, update your Permalink options immediately; which also optimizes your site for search engines. That being said, if you really want to use unfriendly Permalinks, and ONLY if you're using unfriendly Permalinks, you should set this to <code>Yes</code>; and don't worry too much, the sky won't fall on your head :-)"
msgstr ""

#: includes/menu-pages.php:340
msgid "No, do NOT cache (or serve a cache file) when a query string is present."
msgstr ""

#: includes/menu-pages.php:341
msgid "Yes, I would like to cache URLs that contain a query string."
msgstr ""

#: includes/menu-pages.php:343
msgid "<strong>Note:</strong> POST requests (i.e. forms with <code>method=&quot;post&quot;</code>) are always excluded from the cache, which is the way it should be. Any <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\" target=\"_blank\">POST/PUT/DELETE</a> request should NEVER (ever) be cached. CLI (and self-serve) requests are also excluded from the cache (always). A CLI request is one that comes from the command line; commonly used by CRON jobs and other automated routines. A self-serve request is an HTTP connection established from your site -âº to your site. For instance, a WP Cron job, or any other HTTP request that is spawned not by a user, but by the server itself."
msgstr ""

#: includes/menu-pages.php:344
msgid "<strong>Advanced Tip:</strong> If you are NOT caching GET requests (recommended), but you DO want to allow some special URLs that include query string parameters to be cached; you can add this special parameter to any URL <code>?qcAC=1</code>. This tells Quick Cache that it's OK to cache that particular URL, even though it contains query string arguments. If you ARE caching GET requests and you want to force Quick Cache to NOT cache a specific request, you can add this special parameter to any URL <code>?qcAC=0</code>."
msgstr ""

#: includes/menu-pages.php:352
msgid "404 Requests"
msgstr ""

#: includes/menu-pages.php:357
msgid "Caching Enabled for 404 Requests?"
msgstr ""

#: includes/menu-pages.php:358
msgid "When this is set to <code>No</code>, Quick Cache will ignore all 404 requests and no cache file will be served. While this is fine for most site owners, caching the 404 page on a high-traffic site may further reduce server load. When this is set to <code>Yes</code>, Quick Cache will cache the 404 page (see <a href=\"https://codex.wordpress.org/Creating_an_Error_404_Page\" target=\"_blank\">Creating an Error 404 Page</a>) and then serve that single cache file to all future 404 requests."
msgstr ""

#: includes/menu-pages.php:360
msgid "No, do NOT cache (or serve a cache file) for 404 requests."
msgstr ""

#: includes/menu-pages.php:361
msgid "Yes, I would like to cache the 404 page and serve the cached file for 404 requests."
msgstr ""

#: includes/menu-pages.php:363
msgid "<strong>How does Quick Cache cache 404 requests?</strong> Quick Cache will create a special cache file (<code>----404----.html</code>, see Advanced Tip below) for the first 404 request and then <a href=\"http://www.php.net/manual/en/function.symlink.php\" target=\"_blank\">symlink</a> future 404 requests to this special cache file. That way you don't end up with lots of 404 cache files that all contain the same thing (the contents of the 404 page). Instead, you'll have one 404 cache file and then several symlinks (i.e., references) to that 404 cache file."
msgstr ""

#: includes/menu-pages.php:364
msgid "<strong>Advanced Tip:</strong> The default 404 cache filename (<code>----404----.html</code>) is designed to minimize the chance of a collision with a cache file for a real page with the same name. However, if you want to override this default and define your own 404 cache filename, you can do so by adding <code>define('QUICK_CACHE_404_CACHE_FILENAME', 'your-404-cache-filename');</code> to your <code>wp-config.php</code> file (note that the <code>.html</code> extension should be excluded when defining a new filename)."
msgstr ""

#: includes/menu-pages.php:372
msgid "RSS, RDF, and Atom Feeds"
msgstr ""

#: includes/menu-pages.php:377
msgid "Caching Enabled for RSS, RDF, Atom Feeds?"
msgstr ""

#: includes/menu-pages.php:378
msgid "This should almost ALWAYS be set to <code>No</code>. UNLESS, you're sure that you want to cache your feeds. If you use a web feed management provider like GoogleÂ® Feedburner and you set this option to <code>Yes</code>, you may experience delays in the detection of new posts. <strong>NOTE:</strong> If you do enable this, it is highly recommended that you also enable automatic Feed Clearing too. Please see the section above: \"Clearing the Cache\". Find the sub-section titled: \"Auto-Clear RSS/RDF/ATOM Feeds\"."
msgstr ""

#: includes/menu-pages.php:380
msgid "No, do NOT cache (or serve a cache file) when displaying a feed."
msgstr ""

#: includes/menu-pages.php:381
msgid "Yes, I would like to cache feed URLs."
msgstr ""

#: includes/menu-pages.php:383
msgid "<strong>Note:</strong> This option affects all feeds served by WordPress, including the site feed, the site comment feed, post-specific comment feeds, author feeds, search feeds, and category and tag feeds. See also: <a href=\"http://codex.wordpress.org/WordPress_Feeds\" target=\"_blank\">WordPress Feeds</a>."
msgstr ""

#: includes/menu-pages.php:391
msgid "URI Exclusion Patterns"
msgstr ""

#: includes/menu-pages.php:395
msgid "Don't Cache These Special URI Exclusion Patterns?"
msgstr ""

#: includes/menu-pages.php:396
msgid "Sometimes there are certain cases where a particular file, or a particular group of files, should never be cached. This is where you will enter those if you need to (one per line). Searches are performed against the <a href=\"https://gist.github.com/jaswsinc/338b6eb03a36c048c26f\" target=\"_blank\" style=\"text-decoration:none;\"><code>REQUEST_URI</code></a>; i.e. <code>/path/?query</code> (caSe insensitive). So, don't put in full URLs here, just word fragments found in the file path (or query string) is all you need, excluding the http:// and domain name. A wildcard <code>*</code> character can also be used when necessary; e.g. <code>/category/abc-followed-by-*</code>; (where <code>*</code> = anything, 0 or more characters in length)."
msgstr ""

#: includes/menu-pages.php:398
msgid "<strong>Tip:</strong> let's use this example URL: <code>http://www.example.com/post/example-post-123</code>. To exclude this URL, you would put this line into the field above: <code>/post/example-post-123</code>. Or, you could also just put in a small fragment, like: <code>example</code> or <code>example-*-123</code> and that would exclude any URI containing that word fragment."
msgstr ""

#: includes/menu-pages.php:399 includes/menu-pages.php:415
#: includes/menu-pages.php:431 includes/menu-pages.php:529
#: includes/menu-pages.php:533
msgid "<strong>Note:</strong> please remember that your entries here should be formatted as a line-delimited list; e.g. one exclusion pattern per line."
msgstr ""

#: includes/menu-pages.php:407
msgid "HTTP Referrer Exclusion Patterns"
msgstr ""

#: includes/menu-pages.php:411
msgid "Don't Cache These Special HTTP Referrer Exclusion Patterns?"
msgstr ""

#: includes/menu-pages.php:412
msgid "Sometimes there are special cases where a particular referring URL (or referring domain) that sends you traffic; or even a particular group of referring URLs or domains that send you traffic; should result in a page being loaded on your site that is NOT from the cache (and that resulting page should never be cached). This is where you will enter those if you need to (one per line). Searches are performed against the <a href=\"http://www.php.net//manual/en/reserved.variables.server.php\" target=\"_blank\" style=\"text-decoration:none;\"><code>HTTP_REFERER</code></a> (caSe insensitive). A wildcard <code>*</code> character can also be used when necessary; e.g. <code>*.domain.com</code>; (where <code>*</code> = anything, 0 or more characters in length)."
msgstr ""

#: includes/menu-pages.php:414
msgid "<strong>Tip:</strong> let's use this example URL: <code>http://www.referring-domain.com/search/?q=search+terms</code>. To exclude this referring URL, you could put this line into the field above: <code>www.referring-domain.com</code>. Or, you could also just put in a small fragment, like: <code>/search/</code> or <code>q=*</code>; and that would exclude any referrer containing that word fragment."
msgstr ""

#: includes/menu-pages.php:423
msgid "User-Agent Exclusion Patterns"
msgstr ""

#: includes/menu-pages.php:427
msgid "Don't Cache These Special User-Agent Exclusion Patterns?"
msgstr ""

#: includes/menu-pages.php:428
msgid "Sometimes there are special cases when a particular user-agent (e.g. a specific browser or a specific type of device); should be shown a page on your site that is NOT from the cache (and that resulting page should never be cached). This is where you will enter those if you need to (one per line). Searches are performed against the <a href=\"http://www.php.net//manual/en/reserved.variables.server.php\" target=\"_blank\" style=\"text-decoration:none;\"><code>HTTP_USER_AGENT</code></a> (caSe insensitive). A wildcard <code>*</code> character can also be used when necessary; e.g. <code>Android *; Chrome/* Mobile</code>; (where <code>*</code> = anything, 0 or more characters in length)."
msgstr ""

#: includes/menu-pages.php:430
msgid "<strong>Tip:</strong> if you wanted to exclude iPhones put this line into the field above: <code>iPhone;*AppleWebKit</code>. Or, you could also just put in a small fragment, like: <code>iphone</code>; and that would exclude any user-agent containing that word fragment. Note, this is just an example. With a default installation of Quick Cache, there is no compelling reason to exclude iOS devices (or any mobile device for that matter)."
msgstr ""

#: includes/menu-pages.php:439
msgid "Auto-Cache Engine"
msgstr ""

#: includes/menu-pages.php:444
msgid "Enable the Auto-Cache Engine?"
msgstr ""

#: includes/menu-pages.php:445
msgid "After using Quick Cache for awhile (or any other page caching plugin, for that matter); it becomes obvious that at some point (based on your configured Expiration Time) Quick Cache has to refresh itself. It does this by ditching its cached version of a page, reloading the database-driven content, and then recreating the cache with the latest data. This is a never ending regeneration cycle that is based entirely on your configured Expiration Time."
msgstr ""

#: includes/menu-pages.php:446
msgid "Understanding this, you can see that 99% of your visitors are going to receive a lightning fast response from your server. However, there will always be around 1% of your visitors that land on a page for the very first time (before it's been cached), or land on a page that needs to have its cache regenerated, because the existing cache has become outdated. We refer to this as a <em>First-Come Slow-Load Issue</em>. Not a huge problem, but if you're optimizing your site for every ounce of speed possible, the Auto-Cache Engine can help with this. The Auto-Cache Engine has been designed to combat this issue by taking on the responsibility of being that first visitor to a page that has not yet been cached, or has an expired cache. The Auto-Cache Engine is powered, in part, by <a href=\"http://codex.wordpress.org/Category:WP-Cron_Functions\" target=\"_blank\">WP-Cron</a> (already built into WordPress). The Auto-Cache Engine runs at 15-minute intervals via WP-Cron. It also uses the <a href=\"http://core.trac.wordpress.org/browser/trunk/wp-includes/http.php\" target=\"_blank\">WP_Http</a> class, which is also built into WordPress already."
msgstr ""

#: includes/menu-pages.php:447
msgid "The Auto-Cache Engine obtains its list of URLs to auto-cache, from two different sources. It can read an <a href=\"http://wordpress.org/extend/plugins/google-sitemap-generator/\" target=\"_blank\">XML Sitemap</a> and/or a list of specific URLs that you supply. If you supply both sources, it will use both sources collectively. The Auto-Cache Engine takes ALL of your other configuration options into consideration too, including your Expiration Time, as well as any cache exclusion rules."
msgstr ""

#: includes/menu-pages.php:449
msgid "No, leave the Auto-Cache Engine disabled please."
msgstr ""

#: includes/menu-pages.php:450
msgid "Yes, I want the Auto-Cache Engine to keep pages cached automatically."
msgstr ""

#: includes/menu-pages.php:454
msgid "XML Sitemap URL (or an XML Sitemap Index)"
msgstr ""

#: includes/menu-pages.php:457
msgid "And/Or; a List of URLs to Auto-Cache (One Per Line)"
msgstr ""

#: includes/menu-pages.php:460
msgid "Auto-Cache Delay Timer (in Milliseconds)"
msgstr ""

#: includes/menu-pages.php:461
msgid "As the Auto-Cache Engine runs through each URL, you can tell it to wait X number of milliseconds between each connection that it makes. It is strongly suggested that you DO have some small delay here. Otherwise, you run the risk of hammering your own web server with multiple repeated connections whenever the Auto-Cache Engine is running. This is especially true on very large sites; where there is the potential for hundreds of repeated connections as the Auto-Cache Engine goes through a long list of URLs. Adding a delay between each connection will prevent the Auto-Cache Engine from placing a heavy load on the processor that powers your web server. A value of <code>500</code> milliseconds is suggested here (half a second). If you experience problems, you can bump this up a little at a time, in increments of <code>500</code> milliseconds; until you find a happy place for your server. <em>Please note that <code>1000</code> milliseconds = <code>1</code> full second.</em>"
msgstr ""

#: includes/menu-pages.php:464
msgid "Auto-Cache User-Agent String"
msgstr ""

#: includes/menu-pages.php:466
msgid "This is how the Auto-Cache Engine identifies itself when connecting to URLs. See <a href=\"http://en.wikipedia.org/wiki/User_agent\" target=\"_blank\">User Agent</a> in the Wikipedia."
msgstr ""

#: includes/menu-pages.php:475
msgid "HTML Compression"
msgstr ""

#: includes/menu-pages.php:480
msgid "Enable WebSharksâ¢ HTML Compression?"
msgstr ""

#: includes/menu-pages.php:481
msgid "This is an experimental feature, however it offers a potentially HUGE speed boost. You can <a href=\"https://github.com/websharks/html-compressor\" target=\"_blank\">learn more here</a>. Please use with caution."
msgstr ""

#: includes/menu-pages.php:483
msgid "<strong>WARNING:</strong> The HTML Compressor requires the <a href=\"http://www.php.net/manual/en/book.curl.php\" target=\"_blank\" rel=\"external\">cURL extension for PHP</a>. cURL must also be compiled together with <a href=\"http://www.php.net/manual/en/book.openssl.php\" target=\"_blank\" rel=\"external\">OpenSSL</a>. Quick Cache has detected that one or both of these are currently missing. Please check with your hosting company to resolve this message."
msgstr ""

#: includes/menu-pages.php:485
msgid "No, do NOT compress HTML/CSS/JS code at runtime."
msgstr ""

#: includes/menu-pages.php:486
msgid "Yes, I want to compress HTML/CSS/JS for blazing fast speeds."
msgstr ""

#: includes/menu-pages.php:488
msgid "<strong>Note:</strong> This is experimental. Please <a href=\"https://github.com/websharks/quick-cache/issues\" target=\"_blank\">report issues here</a>."
msgstr ""

#: includes/menu-pages.php:491
msgid "HTML Compression Options"
msgstr ""

#: includes/menu-pages.php:492
msgid "You can <a href=\"https://github.com/WebSharks/html-compressor\" target=\"_blank\">learn more about all of these options here</a>."
msgstr ""

#: includes/menu-pages.php:494
msgid "Yes, combine CSS from &lt;head&gt; and &lt;body&gt; into fewer files."
msgstr ""

#: includes/menu-pages.php:495
msgid "No, do not combine CSS from &lt;head&gt; and &lt;body&gt; into fewer files."
msgstr ""

#: includes/menu-pages.php:498
msgid "Yes, compress the code in any unified CSS files."
msgstr ""

#: includes/menu-pages.php:499
msgid "No, do not compress the code in any unified CSS files."
msgstr ""

#: includes/menu-pages.php:502
msgid "Yes, combine JS from &lt;head&gt; into fewer files."
msgstr ""

#: includes/menu-pages.php:503
msgid "No, do not combine JS from &lt;head&gt; into fewer files."
msgstr ""

#: includes/menu-pages.php:506
msgid "Yes, combine JS footer scripts into fewer files."
msgstr ""

#: includes/menu-pages.php:507
msgid "No, do not combine JS footer scripts into fewer files."
msgstr ""

#: includes/menu-pages.php:510
msgid "Yes, combine CSS/JS from remote resources too."
msgstr ""

#: includes/menu-pages.php:511
msgid "No, do not combine CSS/JS from remote resources."
msgstr ""

#: includes/menu-pages.php:514
msgid "Yes, compress the code in any unified JS files."
msgstr ""

#: includes/menu-pages.php:515
msgid "No, do not compress the code in any unified JS files."
msgstr ""

#: includes/menu-pages.php:518
msgid "Yes, compress inline JavaScript snippets."
msgstr ""

#: includes/menu-pages.php:519
msgid "No, do not compress inline JavaScript snippets."
msgstr ""

#: includes/menu-pages.php:522
msgid "Yes, compress (remove extra whitespace) in the final HTML code too."
msgstr ""

#: includes/menu-pages.php:523
msgid "No, do not compress the final HTML code."
msgstr ""

#: includes/menu-pages.php:526
msgid "CSS Exclusion Patterns?"
msgstr ""

#: includes/menu-pages.php:527
msgid "Sometimes there are special cases when a particular CSS file should NOT be consolidated or compressed in any way. This is where you will enter those if you need to (one per line). Searches are performed against the <code>&lt;link href=&quot;&quot;&gt;</code> value, and also against the contents of any inline <code>&lt;style&gt;</code> tags (caSe insensitive). A wildcard <code>*</code> character can also be used when necessary; e.g. <code>xy*-framework</code>; (where <code>*</code> = anything, 0 or more characters in length)."
msgstr ""

#: includes/menu-pages.php:530
msgid "JavaScript Exclusion Patterns?"
msgstr ""

#: includes/menu-pages.php:531
msgid "Sometimes there are special cases when a particular JS file should NOT be consolidated or compressed in any way. This is where you will enter those if you need to (one per line). Searches are performed against the <code>&lt;script src=&quot;&quot;&gt;</code> value, and also against the contents of any inline <code>&lt;script&gt;</code> tags (caSe insensitive). A wildcard <code>*</code> character can also be used when necessary; e.g. <code>xy*-framework</code>; (where <code>*</code> = anything, 0 or more characters in length)."
msgstr ""

#: includes/menu-pages.php:535
msgid "HTML Compression Cache Expiration"
msgstr ""

#: includes/menu-pages.php:537
msgid "<strong>Tip:</strong> the value that you specify here MUST be compatible with PHP's <a href=\"http://php.net/manual/en/function.strtotime.php\" target=\"_blank\" style=\"text-decoration:none;\"><code>strtotime()</code></a> function. Examples: <code>2 hours</code>, <code>7 days</code>, <code>6 months</code>, <code>1 year</code>."
msgstr ""

#: includes/menu-pages.php:538
msgid "<strong>Note:</strong> This does NOT impact the overall cache expiration time that you configure with Quick Cache. It only impacts the sub-routines provided by the HTML Compressor. In fact, this expiration time is mostly irrelevant. The HTML Compressor uses an internal checksum, and it also checks <code>filemtime()</code> before using an existing cache file. The HTML Compressor class also handles the automatic cleanup of your cache directories to keep it from growing too large over time. Therefore, unless you have VERY little disk space there is no reason to set this to a lower value (even if your site changes dynamically quite often). If anything, you might like to increase this value which could help to further reduce server load. You can <a href=\"https://github.com/WebSharks/HTML-Compressor\" target=\"_blank\">learn more here</a>. We recommend setting this value to at least double that of your overall Quick Cache expiration time."
msgstr ""

#: includes/menu-pages.php:547
msgid "GZIP Compression"
msgstr ""

#: includes/menu-pages.php:552
msgid "<a href=\"https://developers.google.com/speed/articles/gzip\" target=\"_blank\">GZIP Compression</a> (Optional; Highly Recommended)"
msgstr ""

#: includes/menu-pages.php:553
msgid "You don't have to use an <code>.htaccess</code> file to enjoy the performance enhancements provided by this plugin; caching is handled automatically by WordPress/PHP alone. That being said, if you want to take advantage of the additional speed enhancements associated w/ GZIP compression (and we do recommend this), then you WILL need an <code>.htaccess</code> file to accomplish that part."
msgstr ""

#: includes/menu-pages.php:554
msgid "Quick Cache fully supports GZIP compression on its output. However, it does not handle GZIP compression directly. We purposely left GZIP compression out of this plugin, because GZIP compression is something that should really be enabled at the Apache level or inside your <code>php.ini</code> file. GZIP compression can be used for things like JavaScript and CSS files as well, so why bother turning it on for only WordPress-generated pages when you can enable GZIP at the server level and cover all the bases!"
msgstr ""

#: includes/menu-pages.php:555
msgid "If you want to enable GZIP, create an <code>.htaccess</code> file in your WordPressÂ® installation directory, and put the following few lines in it. Alternatively, if you already have an <code>.htaccess</code> file, just add these lines to it, and that is all there is to it. GZIP is now enabled in the recommended way! See also: <a href=\"https://developers.google.com/speed/articles/gzip\" target=\"_blank\"><i class=\"fa fa-youtube-play\"></i> video about GZIP Compression</a>."
msgstr ""

#: includes/menu-pages.php:566
msgid "Dynamic Version Salt"
msgstr ""

#: includes/menu-pages.php:571
msgid "<i class=\"fa fa-flask\"></i> <span style=\"display:inline-block; padding:5px; border-radius:3px; background:#FFFFFF; color:#354913;\"><span style=\"font-weight:bold; font-size:80%;\">GEEK ALERT</span></span> This is for VERY advanced users only..."
msgstr ""

#: includes/menu-pages.php:572
msgid "<em>Note: Understanding the Quick Cache <a href=\"http://www.websharks-inc.com/r/quick-cache-branched-cache-structure-wiki/\" target=\"_blank\">Branched Cache Structure</a> is a prerequisite to understanding how Dynamic Version Salts are added to the mix.</em>"
msgstr ""

#: includes/menu-pages.php:573
msgid "A Version Salt gives you the ability to dynamically create multiple variations of the cache, and those dynamic variations will be served on subsequent visits; e.g. if a visitor has a specific cookie (of a certain value) they will see pages which were cached with that version (i.e. w/ that Version Salt: the value of the cookie). A Version Salt can really be anything."
msgstr ""

#: includes/menu-pages.php:574
msgid "A Version Salt can be a single variable like <code>$_COOKIE['my_cookie']</code>, or it can be a combination of multiple variables, like <code>$_COOKIE['my_cookie'].$_COOKIE['my_other_cookie']</code>. (When using multiple variables, please separate them with a dot, as shown in the example.)"
msgstr ""

#: includes/menu-pages.php:575
msgid "Experts could even use PHP ternary expressions that evaluate into something. For example: <code>((preg_match('/iPhone/i', $_SERVER['HTTP_USER_AGENT'])) ? 'iPhones' : '')</code>. This would force a separate version of the cache to be created for iPhones (e.g., <code>/cache/PROTOCOL/HOST/REQUEST-URI.v/iPhones.html</code>)."
msgstr ""

#: includes/menu-pages.php:576
msgid "For more documentation, please see <a href=\"http://www.websharks-inc.com/r/quick-cache-dynamic-version-salts-wiki/\" target=\"_blank\">Dynamic Version Salts</a>."
msgstr ""

#: includes/menu-pages.php:578
msgid "Create a Dynamic Version Salt For Quick Cache? &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"font-size:90%; opacity:0.5;\">150% OPTIONAL</span>"
msgstr ""

#: includes/menu-pages.php:580
msgid "<a href=\"http://php.net/manual/en/language.variables.superglobals.php\" target=\"_blank\">Super Globals</a> work here; <a href=\"http://codex.wordpress.org/Editing_wp-config.php#table_prefix\" target=\"_blank\"><code>$GLOBALS['table_prefix']</code></a> is a popular one.<br />Or, perhaps a PHP Constant defined in <code>/wp-config.php</code>; such as <code>WPLANG</code> or <code>DB_HOST</code>."
msgstr ""

#: includes/menu-pages.php:581
msgid "<strong>Important:</strong> your Version Salt is scanned for PHP syntax errors via <a href=\"http://phpcodechecker.com/\" target=\"_blank\"><code>phpCodeChecker.com</code></a>. If errors are found, you'll receive a notice in the Dashboard."
msgstr ""

#: includes/menu-pages.php:582
msgid "If you've enabled a separate cache for each user (optional) that's perfectly OK. A Version Salt works with user caching too."
msgstr ""

#: includes/menu-pages.php:590
msgid "Theme/Plugin Developers"
msgstr ""

#: includes/menu-pages.php:595
msgid "Developing a Theme or Plugin for WordPress?"
msgstr ""

#: includes/menu-pages.php:596
msgid "<strong>Tip:</strong> Quick Cache can be disabled temporarily. If you're a theme/plugin developer, you can set a flag within your PHP code to disable the cache engine at runtime. Perhaps on a specific page, or in a specific scenario. In your PHP script, set: <code>$_SERVER['QUICK_CACHE_ALLOWED'] = FALSE;</code> or <code>define('QUICK_CACHE_ALLOWED', FALSE)</code>. Quick Cache is also compatible with: <code>define('DONOTCACHEPAGE', TRUE)</code>. It does't matter where or when you define one of these, because Quick Cache is the last thing to run before script execution ends."
msgstr ""

#: includes/menu-pages.php:598
msgid "Writing \"Advanced Cache\" Plugins Specifically for Quick Cache"
msgstr ""

#: includes/menu-pages.php:599
msgid "Theme/plugin developers can take advantage of the Quick Cache plugin architecture by creating PHP files inside this special directory: <code>/wp-content/ac-plugins/</code>. There is an <a href=\"https://github.com/WebSharks/Quick-Cache/blob/000000-dev/quick-cache/includes/ac-plugin.example.php\" target=\"_blank\">example plugin file @ GitHub</a> (please review it carefully and ask questions). If you develop a plugin for Quick Cache, please share it with the community by publishing it in the plugins respository at WordPress.org."
msgstr ""

#: includes/menu-pages.php:600
msgid "<strong>Why does Quick Cache have it's own plugin architecture?</strong> WordPress loads the <code>advanced-cache.php</code> drop-in file (for caching purposes) very early-on; before any other plugins or a theme. For this reason, Quick Cache implements it's own watered-down version of functions like <code>add_action()</code>, <code>do_action()</code>, <code>add_filter()</code>, <code>apply_filters()</code>."
msgstr ""

#: includes/menu-pages.php:608
msgid "Import/Export Options"
msgstr ""

#: includes/menu-pages.php:613
msgid "Import Options from Another Quick Cache Installation?"
msgstr ""

#: includes/menu-pages.php:614
msgid "Upload your <code>%1$s-options.json</code> file and click \"Save All Changes\" below. The options provided by your import file will override any that exist currently."
msgstr ""

#: includes/menu-pages.php:617
msgid "Export Existing Options from this Quick Cache Installation?"
msgstr ""

#: includes/menu-pages.php:620
msgid "%1$s-options.json"
msgstr ""

#: includes/menu-pages.php:621
msgid "Download your existing options and import them all into another Quick Cache installation; saves time on future installs."
msgstr ""

#: includes/menu-pages.php:632
msgid "Save All Changes"
msgstr ""

#: includes/menu-pages.php:646 includes/menu-pages.php:710
msgid "Update Now"
msgstr ""

#: includes/menu-pages.php:654
msgid "Options"
msgstr ""

#: includes/menu-pages.php:659 quick-cache-pro.inc.php:802
#: quick-cache-pro.inc.php:824
msgid "Plugin Updater"
msgstr ""

#: includes/menu-pages.php:674
msgid "Update Credentials"
msgstr ""

#: includes/menu-pages.php:679
msgid "WebSharksâ¢ Authentication"
msgstr ""

#: includes/menu-pages.php:680
msgid "From this page you can update to the latest version of Quick Cache Pro for WordPress. Quick Cache Pro is a premium product available for purchase @ <a href=\"http://www.websharks-inc.com/product/%1$s/\" target=\"_blank\">websharks-inc.com</a>. In order to connect with our update servers, we ask that you supply your account login details for <a href=\"http://www.websharks-inc.com/product/%1$s/\" target=\"_blank\">websharks-inc.com</a>. If you prefer not to provide your password, you can use your License Key in place of your password. Your License Key is located under \"My Products (purchase history)\" when you login to your account @ <a href=\"http://www.websharks-inc.com/product/%1$s/\" target=\"_blank\">websharks-inc.com</a>. This will authenticate your copy of Quick Cache Pro; providing you with access to the latest version. You only need to enter these credentials once. Quick Cache Pro will save them in your WordPress database; making future upgrades even easier. <i class=\"fa fa-smile-o\"></i>"
msgstr ""

#: includes/menu-pages.php:682
msgid "WebSharksâ¢ Username"
msgstr ""

#: includes/menu-pages.php:684
msgid "WebSharksâ¢ Password OR Product License Key"
msgstr ""

#: includes/menu-pages.php:693
msgid "Update Notifier"
msgstr ""

#: includes/menu-pages.php:698
msgid "WebSharksâ¢ Update Notifier"
msgstr ""

#: includes/menu-pages.php:699
msgid "When a new version of Quick Cache Pro becomes available, WebSharksâ¢ can display a notification in your WordPress Dashboard prompting you to return to this page and perform an upgrade. Would you like this functionality enabled or disabled?"
msgstr ""

#: includes/menu-pages.php:702
msgid "Yes, display a notification in my WordPress Dashboard when a new version is available."
msgstr ""

#: includes/menu-pages.php:703
msgid "No, do not display any Quick Cache update notifications in my WordPress Dashboard."
msgstr ""

#: includes/share.php:254
msgid "Unable to determine cache directory location."
msgstr ""

#: includes/share.php:1525 includes/share.php:1667
msgid "The `options` property w/ a `cache_max_age` key is not defined in this class."
msgstr ""

#: includes/share.php:1551
msgid "Unable to delete files. Rename failure on directory: `%1$s`."
msgstr ""

#: includes/share.php:1574 includes/share.php:1735 includes/share.php:1841
msgid "Unable to delete symlink: `%1$s`."
msgstr ""

#: includes/share.php:1586 includes/share.php:1747 includes/share.php:1849
msgid "Unable to delete file: `%1$s`."
msgstr ""

#: includes/share.php:1600 includes/share.php:1761 includes/share.php:1857
msgid "Unable to delete dir: `%1$s`."
msgstr ""

#: includes/share.php:1606 includes/share.php:1767 includes/share.php:1863
msgid "Unexpected resource type: `%1$s`."
msgstr ""

#: includes/share.php:1612 includes/share.php:1712 includes/share.php:1773
msgid "Unable to delete files. Rename failure on tmp directory: `%1$s`."
msgstr ""

#: includes/share.php:1827 includes/share.php:1869
msgid "Unable to delete all files/dirs. Rename failure on tmp directory: `%1$s`."
msgstr ""

#: includes/share.php:1874
msgid "Unable to delete directory: `%1$s`."
msgstr ""

#: includes/share.php:1909
msgid "Unable to find the wp-config.php file."
msgstr ""

#: includes/share.php:1925
msgid "No writable tmp directory."
msgstr ""

#: includes/share.php:1930
msgid "Unable to obtain an exclusive lock."
msgstr ""

#: includes/share.php:1983
msgid "%1$s file"
msgid_plural "%1$s files"
msgstr[0] ""
msgstr[1] ""

#: includes/share.php:1999
msgid "%1$s directory"
msgid_plural "%1$s directories"
msgstr[0] ""
msgstr[1] ""

#: includes/share.php:2015
msgid "%1$s file/directory"
msgid_plural "%1$s files/directories"
msgstr[0] ""
msgstr[1] ""

#: includes/share.php:2048
msgid "Invalid hook."
msgstr ""

#: includes/version-specific-upgrade.php:69
msgid "<strong>Quick Cache:</strong> this version is a <strong>complete rewrite</strong> :-) Please review your Quick Cache options carefully!"
msgstr ""

#: includes/version-specific-upgrade.php:79
msgid "<strong>Quick Cache Feature Notice:</strong> This version of Quick Cache adds new options for Feed caching. Feed caching is now disabled by default. If you wish to enable feed caching, please visit the Quick Cache options panel."
msgstr ""

#: includes/version-specific-upgrade.php:109
msgid "<strong>Quick Cache Feature Notice:</strong> This version of Quick Cache introduces a new <a href=\"http://www.websharks-inc.com/r/quick-cache-branched-cache-structure-wiki/\" target=\"_blank\">Branched Cache Structure</a> and several other <a href=\"http://www.websharks-inc.com/post/quick-cache-v140605-now-available/\" target=\"_blank\">new features</a>."
msgstr ""

#: includes/version-specific-upgrade.php:133
msgid "<strong>Quick Cache Notice:</strong> This version of Quick Cache changes the default base directory that it uses, from <code>ABSPATH</code> to <code>WP_CONTENT_DIR</code>. This is for improved compatibility with installations that choose to use a custom <code>WP_CONTENT_DIR</code> location."
msgstr ""

#: includes/version-specific-upgrade.php:134
msgid "Quick Cache has detected that your previously configured cache directory may have been in conflict with this change. As a result, your Quick Cache configuration has been updated to the new default value; just to keep things running smoothly for you :-). If you would like to review this change, please see: <code>Dashboard â¥± Quick Cache â¥± Directory &amp; Expiration Time</code>; where you may customize it further if necessary."
msgstr ""

#: includes/version-specific-upgrade.php:199
msgid "<strong>Important Quick Cache Announcement:</strong> Quick Cache is changing its name to ZenCache! Read more about this change <a href=\"http://www.websharks-inc.com/post/quick-cache-is-changing-its-name/\" target=\"_blank\">here</a>."
msgstr ""

#: includes/wp-php53.php:31
msgid "<strong>%1$s is NOT active; %1$s requires PHP v5.3 (or higher).</strong>"
msgstr ""

#: includes/wp-php53.php:32
msgid "You're currently running <code>PHP v%1$s</code>."
msgstr ""

#: includes/wp-php53.php:33
msgid "A simple update is necessary. Please ask your web hosting company to do this for you."
msgstr ""

#: includes/wp-php53.php:34
msgid "To remove this message, please deactivate %1$s."
msgstr ""

#: quick-cache-pro.inc.php:490
msgid "<strong>NOTICE:</strong> <a href=\"http://zencache.com/r/announcing-zencache-formerly-quick-cache/\" target=\"_blank\">Quick Cache Pro is now ZenCache Pro</a>! No further updates will be made to Quick Cache Pro after March 6th, 2015; see <a href=\"http://zencache.com/r/quick-cache-pro-migration-faq/\" target=\"_blank\">migration instructions</a>."
msgstr ""

#: quick-cache-pro.inc.php:498
msgid "<strong>NOTICE:</strong> This plugin has been deprecated. <a href=\"http://zencache.com/r/announcing-zencache-formerly-quick-cache/\" target=\"_blank\">Quick Cache Pro is now ZenCache Pro</a> (a free upgrade). All future updates will be made to the ZenCache Pro plugin. See <a href=\"http://zencache.com/r/quick-cache-pro-migration-faq/\" target=\"_blank\">migration instructions</a>."
msgstr ""

#: quick-cache-pro.inc.php:523
msgid "<strong>Quick Cache:</strong> detected a new version of itself. Recompiling w/ latest version... wiping the cache... all done :-)"
msgstr ""

#: quick-cache-pro.inc.php:651
msgid "Clear Cache"
msgstr ""

#: quick-cache-pro.inc.php:653
msgid "Clear Cache (Start Fresh); affects the current site only."
msgstr ""

#: quick-cache-pro.inc.php:794 quick-cache-pro.inc.php:817
msgid "Quick Cache"
msgstr ""

#: quick-cache-pro.inc.php:841
msgid "Settings"
msgstr ""

#: quick-cache-pro.inc.php:912
msgid "<strong>Quick Cache Pro:</strong> a new version is now available. Please <a href=\"%1$s\">upgrade to v%2$s</a>."
msgstr ""

#: quick-cache-pro.inc.php:1032 quick-cache-pro.inc.php:1109
msgid "dismiss &times;"
msgstr ""

#: quick-cache-pro.inc.php:1190
msgid "Every 15 Minutes"
msgstr ""

#: quick-cache-pro.inc.php:1388
msgid "<strong>Quick Cache:</strong> detected significant changes. Found %1$s in the cache; auto-wiping."
msgstr ""

#: quick-cache-pro.inc.php:1424
msgid "<strong>%1$s:</strong> detected significant changes that would normally trigger a wipe cache routine, however wipe cache routines have been disabled by a site administrator. [<a href=\"http://www.websharks-inc.com/r/quick-cache-clear-cache-and-wipe-cache-routines-wiki/\" target=\"_blank\">?</a>]"
msgstr ""

#: quick-cache-pro.inc.php:1471
msgid "<strong>Quick Cache:</strong> detected important site changes. Found %1$s in the cache for this site; auto-clearing."
msgstr ""

#: quick-cache-pro.inc.php:1507
msgid "<strong>%1$s:</strong> detected important site changes that would normally trigger a clear cache routine. However, clear cache routines have been disabled by a site administrator. [<a href=\"http://www.websharks-inc.com/r/quick-cache-clear-cache-and-wipe-cache-routines-wiki/\" target=\"_blank\">?</a>]"
msgstr ""

#: quick-cache-pro.inc.php:1586
msgid "Post"
msgstr ""

#: quick-cache-pro.inc.php:1594
msgid "<strong>Quick Cache:</strong> detected changes. Found %1$s in the cache for %2$s ID: <code>%3$s</code>; auto-clearing."
msgstr ""

#: quick-cache-pro.inc.php:1760
msgid "<strong>Quick Cache:</strong> detected changes. Found %1$s in the cache, for XML feeds of type: <code>%2$s</code>; auto-clearing."
msgstr ""

#: quick-cache-pro.inc.php:1809
msgid "<strong>Quick Cache:</strong> detected changes. Found %1$s in the cache for XML sitemaps; auto-clearing."
msgstr ""

#: quick-cache-pro.inc.php:1852
msgid "<strong>Quick Cache:</strong> detected changes. Found %1$s in the cache for the designated \"Home Page\"; auto-clearing."
msgstr ""

#: quick-cache-pro.inc.php:1910
msgid "<strong>Quick Cache:</strong> detected changes. Found %1$s in the cache for the designated \"Posts Page\"; auto-clearing."
msgstr ""

#: quick-cache-pro.inc.php:1968
msgid "Untitled"
msgstr ""

#: quick-cache-pro.inc.php:1979
msgid "<strong>Quick Cache:</strong> detected changes. Found %1$s in the cache for Custom Post Type: <code>%2$s</code>; auto-clearing."
msgstr ""

#: quick-cache-pro.inc.php:2069
msgid "<strong>Quick Cache:</strong> detected changes. Found %1$s in the cache for Author Page: <code>%2$s</code>; auto-clearing."
msgstr ""

#: quick-cache-pro.inc.php:2221
msgid "<strong>Quick Cache:</strong> detected changes. Found %1$s in the cache for %2$s: <code>%3$s</code>; auto-clearing."
msgstr ""

#: quick-cache-pro.inc.php:2373
msgid "<strong>Quick Cache:</strong> detected changes. Found %1$s in the cache for user ID: <code>%2$s</code>; auto-clearing."
msgstr ""

#: quick-cache-pro.inc.php:2633 quick-cache-pro.inc.php:2661
msgid "Doing it wrong! Missing `base_dir` option value. MUST call this method after `setup()`."
msgstr ""

#: quick-cache-pro.inc.php:2863
msgid "<strong>Quick Cache</strong>: ignoring your Version Salt; it seems to contain PHP syntax errors."
msgstr ""

#: quick-cache-pro.inc.php:3106
msgid "Please disable the LITE version of Quick Cache before you activate the PRO version."
msgstr ""

#. Plugin Name of the plugin/theme
msgid "Quick Cache Pro"
msgstr ""

#. Plugin URI of the plugin/theme
msgid "http://www.websharks-inc.com/product/quick-cache/"
msgstr ""

#. Description of the plugin/theme
msgid "WordPress advanced cache plugin; speed without compromise!"
msgstr ""

#. Author of the plugin/theme
msgid "s2MemberÂ® / WebSharks, Inc."
msgstr ""

#. Author URI of the plugin/theme
msgid "http://www.s2member.com"
msgstr ""
